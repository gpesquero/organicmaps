/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
  // Apply the java-library plugin for API and implementation separation.
  id 'application'
}

repositories {
  maven { url "https://nexus.geomatys.com/repository/geotoolkit/" }
  maven { url "https://download.osgeo.org/webdav/geotools/" }
  maven { url "https://repo.osgeo.org/repository/release/" }

  // Use Maven Central for resolving dependencies.
  mavenCentral()
  maven { url 'https://jitpack.io' }

  //mavenLocal()
  //maven { url "https://repo1.maven.org/maven2/" }
}

dependencies {
  // Use JUnit Jupiter for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

  // This dependency is exported to consumers, that is to say found on their compile classpath.
  implementation 'org.apache.commons:commons-lang3:3.13.0'

  // This dependency is used internally, and not exposed to consumers on their own compile classpath.
  implementation 'com.google.guava:guava:30.1.1-jre'

  // GeoTools dependency
  implementation 'com.github.geotools:geotools:29.2'

  //implementation 'com.fasterxml.jackson:jackson-bom:2.13.4.1'
  //def geoToolsVersion = "28.1"
  //implementation "org.geotools:gt-epsg-hsql:${geoToolsVersion}"
  //implementation "org.geotools:gt-shapefile:${geoToolsVersion}"
  //implementation "org.geotools:gt-swing:${geoToolsVersion}"
}

application {
  mainClass = 'om.tools.mappolycheck.Main'
}

tasks.named('test') {
  // Use JUnit Platform for unit tests.
  useJUnitPlatform()
}

task fatJar(type: Jar) {
  manifest {
    attributes 'Main-Class': "om.tools.mappolycheck.Main"
  }
  archiveBaseName = "${rootProject.name}"
  from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}
